apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: drone-management-api-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    nginx.ingress.kubernetes.io/use-regex: "true"
spec:
  ingressClassName: nginx
  rules:
    - http:
        paths:
          - pathType: ImplementationSpecific
            path: "/drone-management-api(/|$)(.*)"
            backend:
              service:
                name: drone-management-api
                port:
                  number: 8080
          - pathType: ImplementationSpecific
            path: "/q/dev-ui(/|$)(.*)"
            backend:
              service:
                name: drone-management-api
                port:
                  number: 8080



---
apiVersion: v1
kind: Service
metadata:
  name: drone-management-api
  labels:
    app: drone-management-api
spec:
  ports:
    - port: 8080
      name: http
  type: ClusterIP
  selector:
    app: drone-management-api
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: drone-management-api
spec:
  selector:
    matchLabels:
      app: drone-management-api
  template:
    metadata:
      labels:
        app: drone-management-api
    spec:
      containers:
        - name: drone-management-api
          image: drone-management-api/drone-management-api:1.0-SNAPSHOT
          env:
            - name: QUARKUS_DATASOURCE_USERNAME
              value: "postgres"
            - name: QUARKUS_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: quarkus.datasource.password
                  name: drone-management-api-secrets
            - name: QUARKUS_DATASOURCE_REACTIVE_URL
              value: "postgresql://postgres:5432/drone-management"
          imagePullPolicy: Never
          ports:
            - containerPort: 8080
---
